# Cargo configuration for ZipLock shared library builds
# This configuration ensures proper cross-compilation for Android targets
# and resolves the libgcc_s.so.1 dependency issue

[build]
# Default target for builds (can be overridden)
# target = "x86_64-unknown-linux-gnu"

[target.aarch64-linux-android]
# Android ARM64 configuration
linker = "aarch64-linux-android21-clang"
rustflags = [
    "-C", "link-arg=-static-libgcc",
    "-C", "link-arg=-Wl,--as-needed",
    "-C", "link-arg=-Wl,--gc-sections",
]

[target.armv7-linux-androideabi]
# Android ARM32 configuration
linker = "armv7a-linux-androideabi21-clang"
rustflags = [
    "-C", "link-arg=-static-libgcc",
    "-C", "link-arg=-Wl,--as-needed",
    "-C", "link-arg=-Wl,--gc-sections",
]

[target.i686-linux-android]
# Android x86 (32-bit) configuration
linker = "i686-linux-android21-clang"
rustflags = [
    "-C", "link-arg=-static-libgcc",
    "-C", "link-arg=-Wl,--as-needed",
    "-C", "link-arg=-Wl,--gc-sections",
]

[target.x86_64-linux-android]
# Android x86_64 configuration
linker = "x86_64-linux-android21-clang"
rustflags = [
    "-C", "link-arg=-static-libgcc",
    "-C", "link-arg=-Wl,--as-needed",
    "-C", "link-arg=-Wl,--gc-sections",
]

[env]
# Environment variables for Android NDK
# These will be set automatically by the build script if ANDROID_NDK_HOME is set

# Android ARM64
CC_aarch64_linux_android = { value = "aarch64-linux-android21-clang", condition = { env = "ANDROID_NDK_HOME" } }
AR_aarch64_linux_android = { value = "llvm-ar", condition = { env = "ANDROID_NDK_HOME" } }
CFLAGS_aarch64_linux_android = { value = "-static-libgcc", condition = { env = "ANDROID_NDK_HOME" } }

# Android ARM32
CC_armv7_linux_androideabi = { value = "armv7a-linux-androideabi21-clang", condition = { env = "ANDROID_NDK_HOME" } }
AR_armv7_linux_androideabi = { value = "llvm-ar", condition = { env = "ANDROID_NDK_HOME" } }
CFLAGS_armv7_linux_androideabi = { value = "-static-libgcc", condition = { env = "ANDROID_NDK_HOME" } }

# Android x86
CC_i686_linux_android = { value = "i686-linux-android21-clang", condition = { env = "ANDROID_NDK_HOME" } }
AR_i686_linux_android = { value = "llvm-ar", condition = { env = "ANDROID_NDK_HOME" } }
CFLAGS_i686_linux_android = { value = "-static-libgcc", condition = { env = "ANDROID_NDK_HOME" } }

# Android x86_64
CC_x86_64_linux_android = { value = "x86_64-linux-android21-clang", condition = { env = "ANDROID_NDK_HOME" } }
AR_x86_64_linux_android = { value = "llvm-ar", condition = { env = "ANDROID_NDK_HOME" } }
CFLAGS_x86_64_linux_android = { value = "-static-libgcc", condition = { env = "ANDROID_NDK_HOME" } }

# Global Android environment
ANDROID_API_LEVEL = "21"

[profile.release]
# Optimize for size and performance on mobile platforms
opt-level = "s"        # Optimize for size
lto = true             # Link-time optimization
codegen-units = 1      # Better optimization
panic = "abort"        # Smaller binary size
strip = true           # Strip debug symbols

[profile.dev]
# Development profile with debugging support
opt-level = 0
debug = true
overflow-checks = true
