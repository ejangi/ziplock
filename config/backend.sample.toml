# ZipLock Backend Configuration Sample
#
# This file demonstrates all available configuration options for the ZipLock
# backend daemon. Copy this file to your config directory and modify as needed.
#
# Default config locations:
# - Linux: ~/.config/ziplock/backend.toml
# - System: /etc/ziplock/backend.toml

[ipc]
# Unix domain socket path for IPC communication
socket_path = "/tmp/ziplock/backend.sock"

# Socket file permissions (octal format)
socket_permissions = 0o600

# Maximum number of concurrent client connections
max_connections = 10

# Connection timeout in seconds
connection_timeout = 30

# Request processing timeout in seconds
request_timeout = 60

# Enable IPC request/response logging (for debugging)
log_requests = false

[storage]
# Default directory for storing archives
default_archive_dir = "~/.local/share/ziplock"

# Maximum archive file size in MB (0 = unlimited)
max_archive_size_mb = 100

# Number of backup copies to maintain
backup_count = 5

# Enable automatic backup creation
auto_backup = true

# Backup directory path (defaults to archive_dir/backups if not specified)
# backup_dir = "~/.local/share/ziplock/backups"

# File lock timeout in seconds
file_lock_timeout = 30

# Temporary directory for archive operations (defaults to system temp if not specified)
# temp_dir = "/tmp/ziplock"

# Enable archive integrity checking
verify_integrity = true

# Minimum password length for master password
min_password_length = 12

# 7z compression configuration
[storage.compression]
# Compression level (0-9, where 9 is highest compression)
# 0 = no compression, 1 = fastest, 6 = balanced, 9 = best compression
level = 6

# Enable solid compression for better compression ratio
# Note: Solid compression provides better compression but slower random access
# to individual files. Recommended for archives that are mostly read-only.
solid = false

# Multi-threading and advanced options are handled internally by sevenz-rust2
# The library automatically optimizes based on available CPU cores and content
multi_threaded = true

# Dictionary size is automatically determined by the compression level
# Higher levels use larger dictionaries for better compression
dictionary_size_mb = 64

# Block size optimization is handled internally by sevenz-rust2
# The library chooses optimal block sizes based on content and compression level
block_size_mb = 0

[security]
# Argon2 key derivation parameters
# Higher values provide better security but slower key derivation
key_derivation_iterations = 100000
key_derivation_memory_kb = 65536   # 64 MB
key_derivation_parallelism = 4

# Master key auto-lock timeout in seconds (0 = never auto-lock)
auto_lock_timeout = 900 # 15 minutes

# Authentication failure handling
max_auth_attempts = 5
auth_lockout_duration = 300 # 5 minutes

# Enable memory protection features (recommended)
memory_protection = true

# Clear clipboard after timeout in seconds (0 = disabled)
clipboard_clear_timeout = 30

# Minimum master key length
min_master_key_length = 12

# Enforce strong master key requirements
enforce_strong_master_key = true

[logging]
# Log level: trace, debug, info, warn, error
level = "info"

# Enable file logging
file_logging = false

# Log file path (used when file_logging = true)
# log_file = "~/.local/share/ziplock/logs/backend.log"

# Maximum log file size in MB before rotation
max_log_size_mb = 10

# Number of rotated log files to keep
log_rotation_count = 5

# Enable structured JSON logging (useful for log aggregation)
json_format = false

# Enable logging of sensitive operations for security auditing
audit_logging = true

[limits]
# Maximum memory usage in MB (0 = unlimited)
# Set this to prevent excessive memory usage
max_memory_mb = 0

# Maximum number of cached credentials
max_cached_credentials = 1000

# Credential cache TTL in seconds
cache_ttl = 300 # 5 minutes

# Maximum concurrent operations
max_concurrent_operations = 10

# Operation timeout in seconds
operation_timeout = 120 # 2 minutes

# Enable performance metrics collection
enable_metrics = false

# Example configurations for different use cases:

# High compression configuration (slower but smaller archives):
# [storage.compression]
# level = 9
# solid = true
# multi_threaded = true
# dictionary_size_mb = 256  # (handled internally)
# block_size_mb = 64       # (handled internally)

# Fast compression configuration (faster but larger archives):
# [storage.compression]
# level = 3
# solid = false
# multi_threaded = true
# dictionary_size_mb = 32  # (handled internally)
# block_size_mb = 0        # (handled internally)

# Memory-constrained configuration:
# [storage.compression]
# level = 6
# solid = false
# multi_threaded = true    # Library handles CPU usage efficiently
# dictionary_size_mb = 16  # (handled internally)
# block_size_mb = 0        # (handled internally)
# [limits]
# max_memory_mb = 512

# High-security configuration:
# [security]
# key_derivation_iterations = 500000
# key_derivation_memory_kb = 131072  # 128 MB
# key_derivation_parallelism = 8
# auto_lock_timeout = 300  # 5 minutes
# max_auth_attempts = 3
# auth_lockout_duration = 600  # 10 minutes
# min_master_key_length = 16
# enforce_strong_master_key = true
