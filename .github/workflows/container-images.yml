name: Build Container Images

on:
  push:
    paths:
      - ".github/docker/**"
      - ".github/workflows/container-images.yml"
    branches: [main]
  schedule:
    # Rebuild images weekly to get security updates
    - cron: "0 2 * * 0"
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-ubuntu-builder:
    name: Build Ubuntu Builder Image
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/ubuntu-builder
          tags: |
            type=raw,value=latest
            type=sha,prefix={{date 'YYYYMMDD'}}-

      - name: Build and push Ubuntu builder image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: .github/docker/ubuntu-builder.Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Test image
        run: |
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/ubuntu-builder:latest \
            bash -c "rustc --version && cargo --version && pkg-config --exists gtk4"

  build-arch-builder:
    name: Build Arch Builder Image
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/arch-builder
          tags: |
            type=raw,value=latest
            type=sha,prefix={{date 'YYYYMMDD'}}-

      - name: Create Arch builder Dockerfile
        run: |
          cat > .github/docker/arch-builder.Dockerfile << 'EOF'
          FROM archlinux:latest

          # Update system and install dependencies
          RUN pacman -Syu --noconfirm && \
              pacman -S --noconfirm \
                base-devel \
                rust \
                cargo \
                pkg-config \
                git \
                curl \
                file \
                fakeroot \
                openssl \
                xz \
                rsync \
                fontconfig \
                freetype2 \
                libx11 \
                libxft \
                glib2 \
                cairo \
                pango \
                gdk-pixbuf2 \
                atk \
                at-spi2-core \
                at-spi2-atk \
                gtk3 \
                gtk4 \
                libadwaita \
                && pacman -Scc --noconfirm

          # Create non-root user for makepkg
          RUN useradd -m -G wheel builder && \
              echo '%wheel ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers

          # Set up environment
          USER builder
          WORKDIR /home/builder
          ENV PATH="/home/builder/.cargo/bin:${PATH}"

          # Verify installation
          RUN rustc --version && cargo --version

          CMD ["/bin/bash"]
          EOF

      - name: Build and push Arch builder image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: .github/docker/arch-builder.Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Test image
        run: |
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/arch-builder:latest \
            bash -c "rustc --version && cargo --version"

  build-android-builder:
    name: Build Android Builder Image
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/android-builder
          tags: |
            type=raw,value=latest
            type=sha,prefix={{date 'YYYYMMDD'}}-

      - name: Build and push Android builder image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: .github/docker/android-builder.Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Test image
        run: |
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/android-builder:latest \
            bash -c "rustc --version && cargo --version && aarch64-linux-android21-clang --version && java -version && echo 'JAVA_HOME: $JAVA_HOME' && echo 'ANDROID_HOME: $ANDROID_HOME' && sdkmanager --version"
